using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication128
{
    class publisher//出版社
    {
        public delegate void pubcomputer(string book);
        public delegate void publife(string book);
        public event publife onpublife;
        public event pubcomputer onpubcomputer;//事件的声明
        public void issuecomputer()//触发事件的方法
        {
            if (onpubcomputer!= null)
            {
                Console.WriteLine("发行刊物电脑杂志");
                onpubcomputer("《计算机科学》杂志");
            }
        }
        public void issulife()
        {
            if (onpublife != null)
            {
                Console.WriteLine("发行刊物生活杂志");
                onpublife("《读者》");
            }
        }
    }
    class user//订阅者
    {
        private string readername;
        public user(string Name)
        {
            this.readername = Name;
        }
        public void receive(string q)//在事件订阅者中定义事件处理程序
        {
            Console.WriteLine(readername+"已经收到"+q);
        }
    }
    class story
    {
        static void Main()
        {
            publisher pub = new publisher();
            user zs = new user("张三");
            user ls = new user("李四");
            pub.onpubcomputer+=new publisher.pubcomputer(zs.receive);
            pub.onpublife+=new publisher.publife(zs.receive);
            pub.onpubcomputer += new publisher.pubcomputer(ls.receive);
            pub.issuecomputer();
            pub.issulife();
            Console.WriteLine();
            Console.WriteLine("一年以后");
            pub.onpubcomputer -= new publisher.pubcomputer(zs.receive);
            pub.issuecomputer();
            pub.issulife();
        }
    }

}













using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication128
{
    class fruit
    {
        public delegate void fruiter(string food);
        public event fruiter apple;
        public event fruiter peer;
        public void eatapple()
        {
            Console.WriteLine("有人开始吃苹果了");
            apple("苹果");
        }
        public void eatpeer()
        {
            Console.WriteLine("有人开始吃梨子了");
            peer("梨子");
        }
    }
    class eater
    {
        private string name;
        public eater(string Name)
        {
            this.name = Name;
        }
        public void eatname(string food)
        {
            Console.WriteLine(name + "在偷吃" + food + "!");
        }
    }
    class text
    {
        static void Main()
        {
            eater A = new eater("张三");
            eater B = new eater("李四");
            eater C = new eater("王五");
            fruit D = new fruit();
            D.apple += new fruit.fruiter(A.eatname);
            D.apple += new fruit.fruiter(B.eatname);
            D.apple += new fruit.fruiter(C.eatname);
            D.peer += new fruit.fruiter(A.eatname);
            D.peer += new fruit.fruiter(B.eatname);
            D.peer += new fruit.fruiter(C.eatname);
            D.eatapple();
            D.eatpeer();
            Console.WriteLine();
            Console.WriteLine("王五肚子疼走了");
            D.apple -= new fruit.fruiter(C.eatname);
            D.peer -= new fruit.fruiter(C.eatname);
            D.eatapple();
            D.eatpeer();

        }
    }
}
