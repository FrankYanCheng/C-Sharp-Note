1.接口成员必须都在使用接口的类上执行―他们没有代码实体
 抽象类可以拥有抽象成员（没有代码实体，且必须在派生类中执行）
              非抽象成员（他们拥有代码实体，也可以是虚拟的，这样就可以在派生类中重写）
2.接口被定义为公共的（他们倾向于外部使用）
  抽象类的成员也可以是私有的（只要他们不是抽象的）？
  受保护的
  内部的
  受保护的内部成员（其中受保护的内部成员只能在应用程序的代码或派生类中访问）
3.抽象类主要用于共享某些特性，类之间差别不大，如火车的两节车厢的链接点
  接口则是差别大，在基础水平上有所不同，就像一根绳子的链接不同事物
  
